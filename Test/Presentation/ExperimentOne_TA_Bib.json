[
  {"id":"alnuaimiTeamSizeDispersion2010","abstract":"Social loafing is the tendency of individuals to withhold contributions to a task in a team setting. Team size and dispersion are two primary drivers of social loafing in technology-supported team settings. However, the mechanisms through which these drivers affect social loafing are not well understood. Consequently, the objective of this study is to identify the cognitive mechanisms that mediate the effect of team size and dispersion on social loafing in technology-supported teams. Drawing on the theory of moral disengagement, we posit that three primary cognitive mechanisms—diffusion of responsibility, attribution of blame, and dehumanization—will mediate the effect of team size and dispersion on social loafing. We conducted a laboratory study involving 140 students randomly assigned to 32 teams performing a brainstorming task using group systems software. The results show that diffusion of responsibility, attribution of blame, and dehumanization all mediate (partially) the effects of team size on social loafing. Meanwhile, only dehumanization mediates (fully) the effect of dispersion on social loafing.","accessed":{"date-parts":[[2022,10,12]]},"author":[{"family":"Alnuaimi","given":"Omar A."},{"family":"Robert","given":"Lionel P."},{"family":"Maruping","given":"Likoebe M."}],"citation-key":"alnuaimiTeamSizeDispersion2010","container-title":"Journal of Management Information Systems","DOI":"10.2753/MIS0742-1222270109","ISSN":"0742-1222","issue":"1","issued":{"date-parts":[[2010,7,1]]},"note":"_eprint: https://doi.org/10.2753/MIS0742-1222270109","page":"203-230","publisher":"Routledge","source":"Taylor and Francis+NEJM","title":"Team Size, Dispersion, and Social Loafing in Technology-Supported Teams: A Perspective on the Theory of Moral Disengagement","title-short":"Team Size, Dispersion, and Social Loafing in Technology-Supported Teams","type":"article-journal","URL":"https://doi.org/10.2753/MIS0742-1222270109","volume":"27"},
  {"id":"anuHumanErrorBased2020","abstract":"Many security incidents can be traced back to software vulnerabilities, which can be described as security-related defects/bugs in the code that can potentially be exploited by the attackers to perform unauthorized actions. An analysis of vulnerability data disseminated by organizations such as NIST’ s National Vulnerability (NVD) and SANS Institute shows that a majority of vulnerabilities can be traced back to a relatively small set of root causes mostly related to the repeated mistakes by the programmers. That is, programmers exhibit a pattern of erroneous coding practices or behavior which lead to vulnerable code. Cognitive Psychologists have long been studying these erroneous behavior patterns and have termed them as human cognition failures or simply, human errors. The primary goal of this paper is to propose a classification for the most frequently observed human errors committed by the programmers (the commitment of a human error can lead to injection of one or more security defects/bugs). Such a classification can be useful for software development organizations as they can train developers on the human errors so that developers can avoid committing the human errors themselves, thereby reducing the chances of vulnerability injection in their code.","author":[{"family":"Anu","given":"V."},{"family":"Sultana","given":"K. Z."},{"family":"Samanthula","given":"B. K."}],"citation-key":"anuHumanErrorBased2020","container-title":"2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","DOI":"10.1109/ISSREW51248.2020.00036","event-title":"2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)","issued":{"date-parts":[[2020,10]]},"page":"49-54","source":"IEEE Xplore","title":"A Human Error Based Approach to Understanding Programmer-Induced Software Vulnerabilities","type":"paper-conference"},
  {"id":"assalSecuritySoftwareDevelopment2018","abstract":"We interviewed developers currently employed in industry to explore real-life software security practices during each stage of the development lifecycle. This paper explores steps taken by teams to ensure the security of their applications, how developers’ security knowledge inﬂuences the process, and how security ﬁts in (and sometimes conﬂicts with) the development workﬂow. We found a wide range of approaches to software security, if it was addressed at all. Furthermore, real-life security practices vary considerably from best practices identiﬁed in the literature. Best practices often ignore factors aﬀecting teams’ operational strategies. Division of labour is one example, whereby complying with best practices would require some teams to restructure and re-assign tasks—an eﬀort typically viewed as unreasonable. Other inﬂuential factors include company culture, security knowledge, external pressure, and experiencing a security incident.","author":[{"family":"Assal","given":"Hala"},{"family":"Chiasson","given":"Sonia"}],"citation-key":"assalSecuritySoftwareDevelopment2018","issued":{"date-parts":[[2018]]},"language":"en","page":"17","source":"Zotero","title":"Security in the Software Development Lifecycle","type":"article-journal"},
  {"id":"backevikSocialIdentitySoftware2019","author":[{"family":"Backevik","given":"Andreas"},{"family":"Tholen","given":"Erik"},{"family":"Gren","given":"Lucas"}],"citation-key":"backevikSocialIdentitySoftware2019","DOI":"10.1109/chase.2019.00033","event-title":"2019 IEEE/ACM 12th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)","issued":{"date-parts":[[2019]]},"page":"107-114","title":"Social Identity in Software Development","type":"paper-conference"},
  {"id":"banduraSelectiveMoralDisengagement2002","abstract":"Moral agency has dual aspects manifested in both the power to refrain from behaving inhumanely and the proactive power to behave humanely. Moral agency is embedded in a broader socio-cognitive self-theory encompassing affective self-regulatory mechanisms rooted in personal standards linked to self-sanctions. Moral functioning is thus governed by self-reactive selfhood rather than by dispassionate abstract reasoning. The self-regulatory mechanisms governing moral conduct do not come into play unless they are activated and there are many psychosocial mechanisms by which moral self-sanctions are selectively disengaged from inhumane conduct. The moral disengagement may centre on the cognitive restructuring of inhumane conduct into a benign or worthy one by moral justi cation, sanitising language and exonerative social comparison; disavowal of personal agency in the harm one causes by diffusion or displacement of responsibility; disregarding or minimising the injurious effects of one’s actions; and attribution of blame to, and dehumanisation of, those who are victimised. Social cognitive theory adopts an interactionist perspective to morality in which moral actions are the products of the reciprocal interplay of personal and social in uences. Given the many mechanisms for disengaging moral control at both the individual and collective level, civilised life requires, in addition to humane personal standards, safeguards built into social systems that uphold compassionate behaviour and renounce cruelty.","accessed":{"date-parts":[[2022,10,13]]},"author":[{"family":"Bandura","given":"Albert"}],"citation-key":"banduraSelectiveMoralDisengagement2002","container-title":"Journal of Moral Education","container-title-short":"Journal of Moral Education","DOI":"10.1080/0305724022014322","ISSN":"0305-7240, 1465-3877","issue":"2","issued":{"date-parts":[[2002,6]]},"language":"en","page":"101-119","source":"DOI.org (Crossref)","title":"Selective Moral Disengagement in the Exercise of Moral Agency","type":"article-journal","URL":"http://www.tandfonline.com/doi/abs/10.1080/0305724022014322","volume":"31"},
  {"id":"borowaInfluenceCognitiveBiases2021","abstract":"Cognitive biases exert a significant influence on human thinking and decision-making. In order to identify how they influence the occurrence of architectural technical debt, a series of semi-structured interviews with software architects was performed. The results show which classes of architectural technical debt originate from cognitive biases, and reveal the antecedents of technical debt items (classes) through biases. This way, we analysed how and when cognitive biases lead to the creation of technical debt. We also identified a set of debiasing techniques that can be used in order to prevent the negative influence of cognitive biases. The observations of the role of organisational culture in the avoidance of inadvertent technical debt throw a new light on that issue.","author":[{"family":"Borowa","given":"Klara"},{"family":"Zalewski","given":"Andrzej"},{"family":"Kijas","given":"Szymon"}],"citation-key":"borowaInfluenceCognitiveBiases2021","container-title":"2021 IEEE 18th International Conference on Software Architecture (ICSA)","DOI":"10.1109/ICSA51549.2021.00019","event-title":"2021 IEEE 18th International Conference on Software Architecture (ICSA)","issued":{"date-parts":[[2021,3]]},"page":"115-125","source":"IEEE Xplore","title":"The Influence of Cognitive Biases on Architectural Technical Debt","type":"paper-conference"},
  {"id":"braunUsingThematicAnalysis2006","author":[{"family":"Braun","given":"Virginia"},{"family":"Clarke","given":"Victoria"}],"citation-key":"braunUsingThematicAnalysis2006","container-title":"Qualitative research in psychology","ISSN":"1478-0887","issue":"2","issued":{"date-parts":[[2006]]},"page":"77-101","title":"Using thematic analysis in psychology","type":"article-journal","volume":"3"},
  {"id":"brunBlindspotsPythonJava2021","abstract":"Blindspots in APIs can cause software engineers to introduce vulnerabilities, but such blindspots are, unfortunately, common. We study the effect APIs with blindspots have on developers in two languages by replicating an 109-developer, 24-Java-API controlled experiment. Our replication applies to Python and involves 129 new developers and 22 new APIs. We find that using APIs with blindspots statistically significantly reduces the developers' ability to correctly reason about the APIs in both languages, but that the effect is more pronounced for Python. Interestingly, for Java, the effect increased with complexity of the code relying on the API, whereas for Python, the opposite was true. Whether the developers considered API uses to be more difficult, less clear, and less familiar did not have an effect on their ability to correctly reason about them. Developers with better long-term memory recall were more likely to correctly reason about APIs with blindspots, but short-term memory, processing speed, episodic memory, and memory span had no effect. Surprisingly, professional experience and expertice did not improve the developers' ability to reason about APIs with blindspots across both languages, with long-term professionals with many years of experience making mistakes as often as relative novices. Finally, personality traits did not significantly affect the Python developers' ability to reason about APIs with blindspots, but less extraverted and more open developers were better at reasoning about Java APIs with blindspots. Overall, our findings suggest that blindspots in APIs are a serious problem across languages, and that experience and education alone do not overcome that problem, suggesting that tools are needed to help developers recognize blindspots in APIs as they write code that uses those APIs.","accessed":{"date-parts":[[2022,2,7]]},"author":[{"family":"Brun","given":"Yuriy"},{"family":"Lin","given":"Tian"},{"family":"Somerville","given":"Jessie Elise"},{"family":"Myers","given":"Elisha"},{"family":"Ebner","given":"Natalie C."}],"citation-key":"brunBlindspotsPythonJava2021","issued":{"date-parts":[[2021,3,10]]},"source":"arXiv.org","title":"Blindspots in Python and Java APIs Result in Vulnerable Code","type":"article","URL":"http://arxiv.org/abs/2103.06091"},
  {"id":"buehlerExploringPlanningFallacy1994","author":[{"family":"Buehler","given":"Roger"},{"family":"Griffin","given":"Dale"},{"family":"Ross","given":"Michael"}],"citation-key":"buehlerExploringPlanningFallacy1994","container-title":"Journal of personality and social psychology","ISSN":"1939-1315","issue":"3","issued":{"date-parts":[[1994]]},"page":"366","title":"Exploring the\" planning fallacy\": Why people underestimate their task completion times","type":"article-journal","volume":"67"},
  {"id":"chngHackerTypesMotivations2022","abstract":"Understanding and predicting cyber malfeasance is an emerging area of research with the increase in cybercrimes and heightened awareness about cyberse…","accessed":{"date-parts":[[2022,8,15]]},"author":[{"family":"Chng","given":"Samuel"},{"family":"Lu","given":"Han Yu"},{"family":"Kumar","given":"Ayush"},{"family":"Yau","given":"David"}],"citation-key":"chngHackerTypesMotivations2022","container-title":"Computers in Human Behavior Reports","DOI":"10.1016/j.chbr.2022.100167","ISSN":"2451-9588","issued":{"date-parts":[[2022,3,1]]},"language":"en","page":"100167","publisher":"Elsevier","source":"www-sciencedirect-com.ezproxy.lancs.ac.uk","title":"Hacker types, motivations and strategies: A comprehensive framework","title-short":"Hacker types, motivations and strategies","type":"article-journal","URL":"http://www.sciencedirect.com/science/article/pii/S245195882200001X","volume":"5"},
  {"id":"danilovaCodeReviewingMethodology2021","abstract":"While ample experience with end-user studies exists, only little is known about studies with software developers in a security context. In past research investigating the security behavior of software developers, participants often had to complete programming tasks. However, programming tasks require a large amount of participants’ time and effort, which often results in high costs and small sample sizes. We therefore tested a new methodology for security developer studies. In an online study, we asked freelance developers to write code reviews for password-storage code snippets. Since developers often tend to focus on functionality ﬁrst and security later, similar to end users, we prompted half the participants for security. Although the freelancers indicated that they feel responsible for security, our results showed that they did not focus on security in their code reviews, even in a securitycritical task such as password-storage. Almost half the participants wanted to release the insecure code snippets. However, we found that security prompting had a signiﬁcant effect on the security awareness. To provide further insight into this line of work, we compared our results with similar passwordstorage studies containing programming tasks, and discussed code reviewing as a new methodology for future security research with developers.","author":[{"family":"Danilova","given":"Anastasia"},{"family":"Naiakshina","given":"Alena"},{"family":"Rasgauski","given":"Anna"},{"family":"Smith","given":"Matthew"}],"citation-key":"danilovaCodeReviewingMethodology2021","issued":{"date-parts":[[2021]]},"language":"en","page":"21","source":"Zotero","title":"Code Reviewing as Methodology for Online Security Studies with Developers – A Case Study with Freelancers on Password Storage","type":"article-journal"},
  {"id":"duijfShouldOneTrust2021","abstract":"Should one trust experts? My answer to this question is a qualified ‘no’ (and a qualified ‘yes’). In this paper I explore the conditions under which it is rational to trust and defer to experts, and those under which it may be rational to refrain from doing so. I draw on two important factors for an actor’s trust in a partner: trust depends on the partner’s competence and on the partner’s interests (and benevolence). I propose that the conditions under which it is rational to trust and defer to experts depend on the competences of the layperson and the expert, and the degree of interest alignment. I present a model that demonstrates that it can be practically infeasible and even logically impossible to determine the expert’s level of competence and the degree of interest alignment. Although it may sound pessimistic that one can rationally refrain from trusting experts, I will also explore some more optimistic conclusions.","accessed":{"date-parts":[[2022,8,31]]},"author":[{"family":"Duijf","given":"Hein"}],"citation-key":"duijfShouldOneTrust2021","container-title":"Synthese","container-title-short":"Synthese","DOI":"10.1007/s11229-021-03203-7","ISSN":"1573-0964","issue":"3","issued":{"date-parts":[[2021,12,1]]},"language":"en","page":"9289-9312","source":"Springer Link","title":"Should one trust experts?","type":"article-journal","URL":"https://doi.org/10.1007/s11229-021-03203-7","volume":"199"},
  {"id":"gotterbarnInformaticsProfessionalResponsibility2001","abstract":"Many problems in software development can be traced to a narrow understanding of professional responsibility. The author examines ways in which software developers have tried to avoid accepting responsibility for their work. After cataloguing various types of responsibility avoidance, the author introduces an expanded concept of positive responsibility. It is argued that the adoption of this sense of positive responsibility will reduce many problems in software development.","accessed":{"date-parts":[[2022,8,11]]},"author":[{"family":"Gotterbarn","given":"Donald"}],"citation-key":"gotterbarnInformaticsProfessionalResponsibility2001","container-title":"Science and Engineering Ethics","container-title-short":"SCI ENG ETHICS","DOI":"10.1007/s11948-001-0043-5","ISSN":"1471-5546","issue":"2","issued":{"date-parts":[[2001,6,1]]},"language":"en","page":"221-230","source":"Springer Link","title":"Informatics and professional responsibility","type":"article-journal","URL":"https://doi.org/10.1007/s11948-001-0043-5","volume":"7"},
  {"id":"greenDevelopersAreNot2016","abstract":"Rather than recognizing software engineers' limitations, modern security practice has created an adversarial relationship between security software designers and the developers who use their software to construct applications. Using the example of cryptographic APIs, the authors show that developers aren't the enemy and that, to strengthen security systems across the board, security professionals must focus on creating developer-friendly and developer-centric approaches.","author":[{"family":"Green","given":"Matthew"},{"family":"Smith","given":"Matthew"}],"citation-key":"greenDevelopersAreNot2016","container-title":"IEEE Security Privacy","DOI":"10.1109/MSP.2016.111","ISSN":"1558-4046","issue":"5","issued":{"date-parts":[[2016,9]]},"page":"40-46","source":"IEEE Xplore","title":"Developers are Not the Enemy!: The Need for Usable Security APIs","title-short":"Developers are Not the Enemy!","type":"article-journal","volume":"14"},
  {"id":"hallettThisThatNothing2021","abstract":"Does the act of writing a specification (how the code should behave) for a piece of security sensitive code lead to developers producing more secure code? We asked 138 developers to write a snippet of code to store a password: Half of them were asked to write down a specification of how the code should behave before writing the program, the other half were asked to write the code but without being prompted to write a specification first. We find that explicitly prompting developers to write a specification has a small positive effect on the security of password storage approaches implemented. However, developers often fail to store passwords securely, despite claiming to be confident and knowledgeable in their approaches, and despite considering an appropriate range of threats. We find a need for developer-centered usable mechanisms for telling developers how to store passwords: lists of what they must do are not working.","author":[{"family":"Hallett","given":"Joseph"},{"family":"Patnaik","given":"Nikhil"},{"family":"Shreeve","given":"Benjamin"},{"family":"Rashid","given":"Awais"}],"citation-key":"hallettThisThatNothing2021","container-title":"Proceedings of the 43rd International Conference on Software Engineering (ICSE '21)","DOI":"https://doi.org/10.1109/ICSE43902.2021.00053","event-place":"Madrid, Spain","event-title":"Internation Conference of Software Engineering","issued":{"date-parts":[[2021]]},"page":"486-498","publisher":"IEEE","publisher-place":"Madrid, Spain","title":"“Do this! Do that!, And nothing will happen” Do specifications lead to securely stored passwords?","type":"paper-conference"},
  {"id":"haneyWeMakeIt2018","abstract":"Cryptography is an essential component of modern computing. Unfortunately, implementing cryptography correctly is a non-trivial undertaking. Past studies have supported this observation by revealing a multitude of errors and developer pitfalls in the cryptographic implementations of software products. However, the emphasis of these studies was on individual developers; there is an obvious gap in more thoroughly understanding cryptographic development practices of organizations. To address this gap, we conducted 21 in-depth interviews of highly experienced individuals representing organizations that include cryptography in their products. Our ﬁndings suggest a security mindset not seen in other research results, demonstrated by strong organizational security culture and the deep expertise of those performing cryptographic development. This mindset, in turn, guides the careful selection of cryptographic resources and informs formal, rigorous development and testing practices. The enhanced understanding of organizational practices encourages additional research initiatives to explore variations in those implementing cryptography, which can aid in transferring lessons learned from more security-mature organizations to the broader development community through educational opportunities, tools, and other mechanisms. The ﬁndings also support past studies that suggest that the usability of cryptographic resources may be deﬁcient, and provide additional suggestions for making these resources more accessible and usable to developers of varying skill levels.","author":[{"family":"Haney","given":"Julie M"},{"family":"Theofanos","given":"Mary F"},{"family":"Acar","given":"Yasemin"},{"family":"Prettyman","given":"Sandra Spickard"}],"citation-key":"haneyWeMakeIt2018","issued":{"date-parts":[[2018]]},"language":"en","page":"17","source":"Zotero","title":"\"We make it a big deal in the company\": Security Mindsets in Organizations that Develop Cryptographic Products","type":"article-journal"},
  {"id":"jorgensenIdentificationMoreRisks2010","author":[{"family":"Jørgensen","given":"Magne"}],"citation-key":"jorgensenIdentificationMoreRisks2010","container-title":"Information and Software Technology","DOI":"10.1016/j.infsof.2009.12.002","ISSN":"09505849","issue":"5","issued":{"date-parts":[[2010]]},"page":"506-516","section":"506","title":"Identification of more risks can lead to increased over-optimism of and over-confidence in software development effort estimates","type":"article-journal","volume":"52"},
  {"id":"kahnemanIntuitivePredictionBiases1982","abstract":"IntroductionAny significant activity of forecasting involves a large component of judgment, intuition, and educated guesswork. Indeed, the opinions of experts are the source of many technological, political, and social forecasts. Opinions and intuitions play an important part even where the forecasts are obtained by a mathematical model or a simulation. Intuitive judgments enter in the choice of the variables that are considered in such models, the impact factors that are assigned to them, and the initial values that are assumed to hold. The critical role of intuition in all varieties of forecasting calls for an analysis of the factors that limit the accuracy of expert judgments, and for the development of procedures designed to improve the quality of these judgments. …Singular and distributional dataExperts are often required to provide a best guess, estimate, or prediction concerning an uncertain quantity such as the value of the Dow-Jones index on a particular day, the future sales of a product, or the outcome of an election. A distinction should be made between two types of information that are available to the forecaster: singular and distributional. Singular information, or case data, consists of evidence about the particular case under consideration. Distributional information, or base-rate data, consists of knowledge about the distribution of outcomes in similar situations.","accessed":{"date-parts":[[2021,1,29]]},"author":[{"family":"Kahneman","given":"Daniel"},{"family":"Tversky","given":"Amos"}],"citation-key":"kahnemanIntuitivePredictionBiases1982","container-title":"Judgment under Uncertainty: Heuristics and Biases","DOI":"10.1017/CBO9780511809477.031","editor":[{"family":"Tversky","given":"Amos"},{"family":"Kahneman","given":"Daniel"},{"family":"Slovic","given":"Paul"}],"event-place":"Cambridge","ISBN":"978-0-521-28414-1","issued":{"date-parts":[[1982]]},"page":"414-421","publisher":"Cambridge University Press","publisher-place":"Cambridge","source":"Cambridge University Press","title":"Intuitive prediction: Biases and corrective procedures","title-short":"Intuitive prediction","type":"chapter","URL":"https://www.cambridge.org/core/books/judgment-under-uncertainty/intuitive-prediction-biases-and-corrective-procedures/3A2F2ECDC508C662BE17C0FE5FD73C90"},
  {"id":"kahnemanProspectTheoryAnalysis1979","abstract":"This paper presents a critique of expected utility theory as a descriptive model of decision making under risk, and develops an alternative model, called prospect theory. Choices among risky prospects exhibit several pervasive effects that are inconsistent with the basic tenets of utility theory. In particular, people underweight outcomes that are merely probable in comparison with outcomes that are obtained with certainty. This tendency, called the certainty effect, contributes to risk aversion in choices involving sure gains and to risk seeking in choices involving sure losses. In addition, people generally discard components that are shared by all prospects under consideration. This tendency, called the isolation effect, leads to inconsistent preferences when the same choice is presented in different forms. An alternative theory of choice is developed, in which value is assigned to gains and losses rather than to final assets and in which probabilities are replaced by decision weights. The value function is normally concave for gains, commonly convex for losses, and is generally steeper for losses than for gains. Decision weights are generally lower than the corresponding probabilities, except in the range of low probabilities. Overweighting of low probabilities may contribute to the attractiveness of both insurance and gambling.","accessed":{"date-parts":[[2022,8,11]]},"author":[{"family":"Kahneman","given":"Daniel"},{"family":"Tversky","given":"Amos"}],"citation-key":"kahnemanProspectTheoryAnalysis1979","container-title":"Econometrica","DOI":"10.2307/1914185","ISSN":"0012-9682","issue":"2","issued":{"date-parts":[[1979]]},"page":"263-291","publisher":"[Wiley, Econometric Society]","source":"JSTOR","title":"Prospect Theory: An Analysis of Decision under Risk","title-short":"Prospect Theory","type":"article-journal","URL":"http://www.jstor.org/stable/1914185","volume":"47"},
  {"id":"kahnemanThinkingFastSlow2011","author":[{"family":"Kahneman","given":"Daniel"}],"citation-key":"kahnemanThinkingFastSlow2011","issued":{"date-parts":[[2011]]},"publisher":"Macmillan","title":"Thinking, Fast and Slow","type":"book"},
  {"id":"karauSocialLoafingMetaanalytic1993","abstract":"Social loafing is the tendency for individuals to expend less effort when working collectively than when working individually. A meta-analysis of 78 studies demonstrates that social loafing is robust and generalizes across tasks and S populations. A large number of variables were found to moderate social loafing. Evaluation potential, expectations of co-worker performance, task meaningfulness, and culture had especially strong influence. These findings are interpreted in the light of a collective effort model that integrates elements of expectancy-value, social identity, and self-validation theories. (PsycINFO Database Record (c) 2016 APA, all rights reserved)","author":[{"family":"Karau","given":"Steven J."},{"family":"Williams","given":"Kipling D."}],"citation-key":"karauSocialLoafingMetaanalytic1993","container-title":"Journal of Personality and Social Psychology","DOI":"10.1037/0022-3514.65.4.681","event-place":"US","ISSN":"1939-1315","issue":"4","issued":{"date-parts":[[1993]]},"page":"681-706","publisher":"American Psychological Association","publisher-place":"US","source":"APA PsycNet","title":"Social loafing: A meta-analytic review and theoretical integration","title-short":"Social loafing","type":"article-journal","volume":"65"},
  {"id":"kirlapposComplyDeadLong2013","abstract":"Information security has adapted to the modern collaborative organisational nature, and abandoned “command-andcontrol” approaches of the past. But when it comes to managing employee’s information security behaviour, many organisations still use policies proscribing behaviour and sanctioning non-compliance. Whilst many organisations are aware that this “comply or die” approach does not work for modern enterprises where employees collaborate, share, and show initiative, they do not have an alternative approach to fostering secure behaviour. We present an interview analysis of 126 employees’ reasons for not complying with organisational policies, identifying the perceived conflict of security with productive activities as the key driver for non-compliance and confirm the results using a survey of 1256 employees. We conclude that effective problem detection and security measure adaptation needs to be de-centralised - employees are the principal agents who must decide how to implement security in specific contexts. But this requires a higher level of security awareness and skills than most employees currently have. Any campaign aimed at security behaviour needs to transform employee’s perception of their role in security, transforming them to security-aware principal agents.","accessed":{"date-parts":[[2021,3,17]]},"author":[{"family":"Kirlappos","given":"Iacovos"},{"family":"Beautement","given":"Adam"},{"family":"Sasse","given":"M. Angela"}],"citation-key":"kirlapposComplyDeadLong2013","collection-editor":[{"family":"Hutchison","given":"David"},{"family":"Kanade","given":"Takeo"},{"family":"Kittler","given":"Josef"},{"family":"Kleinberg","given":"Jon M."},{"family":"Mattern","given":"Friedemann"},{"family":"Mitchell","given":"John C."},{"family":"Naor","given":"Moni"},{"family":"Nierstrasz","given":"Oscar"},{"family":"Pandu Rangan","given":"C."},{"family":"Steffen","given":"Bernhard"},{"family":"Sudan","given":"Madhu"},{"family":"Terzopoulos","given":"Demetri"},{"family":"Tygar","given":"Doug"},{"family":"Vardi","given":"Moshe Y."},{"family":"Weikum","given":"Gerhard"}],"container-title":"Financial Cryptography and Data Security","DOI":"10.1007/978-3-642-41320-9_5","editor":[{"family":"Adams","given":"Andrew A."},{"family":"Brenner","given":"Michael"},{"family":"Smith","given":"Matthew"}],"event-place":"Berlin, Heidelberg","ISBN":"978-3-642-41319-3 978-3-642-41320-9","issued":{"date-parts":[[2013]]},"language":"en","page":"70-82","publisher":"Springer Berlin Heidelberg","publisher-place":"Berlin, Heidelberg","source":"DOI.org (Crossref)","title":"“Comply or Die” Is Dead: Long Live Security-Aware Principal Agents","title-short":"“Comply or Die” Is Dead","type":"chapter","URL":"http://link.springer.com/10.1007/978-3-642-41320-9_5","volume":"7862"},
  {"id":"lopezHopefullyWeAre2019","author":[{"family":"Lopez","given":"Tamara"},{"family":"Sharp","given":"Helen"},{"family":"Tun","given":"Thein"},{"family":"Bandara","given":"Arosha"},{"family":"Levine","given":"Mark"},{"family":"Nuseibeh","given":"Bashar"}],"citation-key":"lopezHopefullyWeAre2019","DOI":"10.1109/chase.2019.00023","event-title":"2019 IEEE/ACM 12th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)","issued":{"date-parts":[[2019]]},"page":"61-68","title":"\"Hopefully We Are Mostly Secure\": Views on Secure Code in Professional Practice","type":"paper-conference"},
  {"id":"loserSecurityPrivacyHygiene2014","abstract":"User motivations are often considered in human computer relations. The analysis of developer behavior often lacks this perspective. Herzberg’s distinction of motivators and hygiene factors adds a level for the analyses of those sociotechnical phenomena that lead to skipping of security and privacy requirements especially in agile development projects. Requirements of security and privacy are not considered nice-to-have, but as necessary hygiene factors of systems attractiveness, motivation for extra effort is low with respect to those requirements. The motivators for developers – functionality that makes a system special and which is valued by customers and users are dominant for the decisions about priorities of development – hygiene factors like many security requirements get a lower priority. In this paper we introduce this theory with relation to known problems of (agile) development projects with respect to implementing security and privacy. We present this with a case study of mobile app development in a research project that we analyzed by security and privacy aspects.","author":[{"family":"Loser","given":"Kai-Uwe"},{"family":"Degeling","given":"Martin"}],"citation-key":"loserSecurityPrivacyHygiene2014","collection-title":"IFIP Advances in Information and Communication Technology","container-title":"ICT and Society","DOI":"10.1007/978-3-662-44208-1_21","editor":[{"family":"Kimppa","given":"Kai"},{"family":"Whitehouse","given":"Diane"},{"family":"Kuusela","given":"Tiina"},{"family":"Phahlamohlaka","given":"Jackie"}],"event-place":"Berlin, Heidelberg","ISBN":"978-3-662-44208-1","issued":{"date-parts":[[2014]]},"language":"en","page":"255-265","publisher":"Springer","publisher-place":"Berlin, Heidelberg","source":"Springer Link","title":"Security and Privacy as Hygiene Factors of Developer Behavior in Small and Agile Teams","type":"paper-conference"},
  {"id":"loskeCloudComputingProviders2013","author":[{"family":"Loske","given":"André"},{"family":"Widjaja","given":"Thomas"},{"family":"Buxmann","given":"Peter"}],"citation-key":"loskeCloudComputingProviders2013","container-title":"ICIS 2013 Proceedings","issued":{"date-parts":[[2013,12,18]]},"title":"Cloud Computing Providers’ Unrealistic Optimism regarding IT Security Risks: A Threat to Users?","title-short":"Cloud Computing Providers’ Unrealistic Optimism regarding IT Security Risks","type":"article-journal","URL":"https://aisel.aisnet.org/icis2013/proceedings/BreakthroughIdeas/11"},
  {"id":"mohananiCognitiveBiasesSoftware2020","abstract":"One source of software project challenges and failures is the systematic errors introduced by human cognitive biases. Although extensively explored in cognitive psychology, investigations concerning cognitive biases have only recently gained popularity in software engineering research. This paper therefore systematically maps, aggregates and synthesizes the literature on cognitive biases in software engineering to generate a comprehensive body of knowledge, understand state-of-the-art research and provide guidelines for future research and practise. Focusing on bias antecedents, effects and mitigation techniques, we identified 65 articles (published between 1990 and 2016), which investigate 37 cognitive biases. Despite strong and increasing interest, the results reveal a scarcity of research on mitigation techniques and poor theoretical foundations in understanding and interpreting cognitive biases. Although bias-related research has generated many new insights in the software engineering community, specific bias mitigation techniques are still needed for software professionals to overcome the deleterious effects of cognitive biases on their work.","author":[{"family":"Mohanani","given":"Rahul"},{"family":"Salman","given":"Iflaah"},{"family":"Turhan","given":"Burak"},{"family":"Rodríguez","given":"Pilar"},{"family":"Ralph","given":"Paul"}],"citation-key":"mohananiCognitiveBiasesSoftware2020","container-title":"IEEE Transactions on Software Engineering","DOI":"10.1109/TSE.2018.2877759","ISSN":"1939-3520","issue":"12","issued":{"date-parts":[[2020,12]]},"page":"1318-1339","source":"IEEE Xplore","title":"Cognitive Biases in Software Engineering: A Systematic Mapping Study","title-short":"Cognitive Biases in Software Engineering","type":"article-journal","volume":"46"},
  {"id":"nadiJumpingHoopsWhy2016","abstract":"To protect sensitive data processed by current applications, developers, whether security experts or not, have to rely on cryptography. While cryptography algorithms have become increasingly advanced, many data breaches occur because developers do not correctly use the corresponding APIs. To guide future research into practical solutions to this problem, we perform an empirical investigation into the obstacles developers face while using the Java cryptography APIs, the tasks they use the APIs for, and the kind of (tool) support they desire. We triangulate data from four separate studies that include the analysis of 100 StackOverflow posts, 100 GitHub repositories, and survey input from 48 developers. We find that while developers find it difficult to use certain cryptographic algorithms correctly, they feel surprisingly confident in selecting the right cryptography concepts (e.g., encryption vs. signatures). We also find that the APIs are generally perceived to be too low-level and that developers prefer more task-based solutions.","accessed":{"date-parts":[[2021,2,18]]},"author":[{"family":"Nadi","given":"Sarah"},{"family":"Krüger","given":"Stefan"},{"family":"Mezini","given":"Mira"},{"family":"Bodden","given":"Eric"}],"citation-key":"nadiJumpingHoopsWhy2016","collection-title":"ICSE '16","container-title":"Proceedings of the 38th International Conference on Software Engineering","DOI":"10.1145/2884781.2884790","event-place":"New York, NY, USA","ISBN":"978-1-4503-3900-1","issued":{"date-parts":[[2016,5,14]]},"page":"935–946","publisher":"Association for Computing Machinery","publisher-place":"New York, NY, USA","source":"ACM Digital Library","title":"Jumping through hoops: why do Java developers struggle with cryptography APIs?","title-short":"Jumping through hoops","type":"paper-conference","URL":"https://doi.org/10.1145/2884781.2884790"},
  {"id":"naiakshinaIfYouWant2019","abstract":"In 2017 and 2018, Naiakshina et al. (CCS'17, SOUPS'18) studied in a lab setting whether computer science students need to be told to write code that stores passwords securely. The authors' results showed that, without explicit prompting, none of the students implemented secure password storage. When asked about this oversight, a common answer was that they would have implemented secure storage - if they were creating code for a company. To shed light on this possible confusion, we conducted a mixed-methods field study with developers. We hired freelance developers online and gave them a similar password storage task followed by a questionnaire to gain additional insights into their work. From our research, we offer two contributions. First of all, we reveal that, similar to the students, freelancers do not store passwords securely unless prompted, they have misconceptions about secure password storage, and they use outdated methods. Secondly, we discuss the methodological implications of using freelancers and students in developer studies.","accessed":{"date-parts":[[2021,3,4]]},"author":[{"family":"Naiakshina","given":"Alena"},{"family":"Danilova","given":"Anastasia"},{"family":"Gerlitz","given":"Eva"},{"family":"Zezschwitz","given":"Emanuel","non-dropping-particle":"von"},{"family":"Smith","given":"Matthew"}],"citation-key":"naiakshinaIfYouWant2019","collection-title":"CHI '19","container-title":"Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems","DOI":"10.1145/3290605.3300370","event-place":"New York, NY, USA","ISBN":"978-1-4503-5970-2","issued":{"date-parts":[[2019,5,2]]},"page":"1–12","publisher":"Association for Computing Machinery","publisher-place":"New York, NY, USA","source":"ACM Digital Library","title":"\"If you want, I can store the encrypted password\": A Password-Storage Field Study with Freelance Developers","title-short":"If you want, I can store the encrypted password","type":"paper-conference","URL":"https://doi.org/10.1145/3290605.3300370"},
  {"id":"naiakshinaWhyDevelopersGet2017","abstract":"Passwords are still a mainstay of various security systems, as well as the cause of many usability issues. For end-users, many of these issues have been studied extensively, highlighting problems and informing design decisions for better policies and motivating research into alternatives. However, end-users are not the only ones who have usability problems with passwords! Developers who are tasked with writing the code by which passwords are stored must do so securely. Yet history has shown that this complex task often fails due to human error with catastrophic results. While an end-user who selects a bad password can have dire consequences, the consequences of a developer who forgets to hash and salt a password database can lead to far larger problems. In this paper we present a first qualitative usability study with 20 computer science students to discover how developers deal with password storage and to inform research into aiding developers in the creation of secure password systems.","accessed":{"date-parts":[[2022,8,22]]},"author":[{"family":"Naiakshina","given":"Alena"},{"family":"Danilova","given":"Anastasia"},{"family":"Tiefenau","given":"Christian"},{"family":"Herzog","given":"Marco"},{"family":"Dechand","given":"Sergej"},{"family":"Smith","given":"Matthew"}],"citation-key":"naiakshinaWhyDevelopersGet2017","collection-title":"CCS '17","container-title":"Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security","DOI":"10.1145/3133956.3134082","event-place":"New York, NY, USA","ISBN":"978-1-4503-4946-8","issued":{"date-parts":[[2017,10,30]]},"page":"311–328","publisher":"Association for Computing Machinery","publisher-place":"New York, NY, USA","source":"ACM Digital Library","title":"Why Do Developers Get Password Storage Wrong? A Qualitative Usability Study","title-short":"Why Do Developers Get Password Storage Wrong?","type":"paper-conference","URL":"https://doi.org/10.1145/3133956.3134082"},
  {"id":"oliveiraAPIBlindspotsWhy2018","author":[{"family":"Oliveira","given":"Daniela Seabra"},{"family":"Lin","given":"Tian"},{"family":"Rahman","given":"Muhammad Sajidur"},{"family":"Akefirad","given":"Rad"},{"family":"Ellis","given":"Donovan"},{"family":"Perez","given":"Eliany"},{"family":"Bobhate","given":"Rahul"},{"family":"DeLong","given":"Lois A"},{"family":"Cappos","given":"Justin"},{"family":"Brun","given":"Yuriy"}],"citation-key":"oliveiraAPIBlindspotsWhy2018","event-place":"Baltimore, MD, USA","event-title":"Fourteenth Symposium on Usable Privacy and Security ({SOUPS} 2018)","ISBN":"1-939133-10-6","issued":{"date-parts":[[2018]]},"page":"315-328","publisher":"USENIX Association","publisher-place":"Baltimore, MD, USA","title":"{API} Blindspots: Why Experienced Developers Write Vulnerable Code","type":"paper-conference"},
  {"id":"oliveiraItPsychologyStupid2014","author":[{"family":"Oliveira","given":"Daniela Seabra"},{"family":"Rosenthal","given":"Marissa"},{"family":"Morin","given":"Nicole"},{"family":"Yeh","given":"Kuo-Chuan"},{"family":"Cappos","given":"Justin"},{"family":"Zhuang","given":"Yanyan"}],"citation-key":"oliveiraItPsychologyStupid2014","container-title":"Proceedings of the 30th Annual Computer Security Applications Conference on - ACSAC '14","DOI":"10.1145/2664243.2664254","event-title":"Proceedings of the 30th Annual Computer Security Applications Conference on - ACSAC '14","issued":{"date-parts":[[2014]]},"page":"296-305","title":"It's the psychology stupid","type":"paper-conference"},
  {"id":"pahlkeResponsibilityEffectsDecision2015","abstract":"We explore situations in which a decision maker bears responsibility for somebody else’s outcomes as well as for her own. We study such choices for gains and losses, and for different gain probabilities. For 50–50 lotteries over gains we find that being responsible for somebody else’s payoffs increases risk aversion. In the loss domain, on the other hand, we find significantly different behavior relative to gains, with slightly more risk seeking under responsibility. In a second experiment, we replicate the finding of increased risk aversion for large probabilities of a gain, while for small probability gains we find increased risk seeking under conditions of responsibility relative to large probabilities. This discredits hypotheses of a ‘cautious shift’ under responsibility, and may indicate an accentuation of the fourfold pattern of risk attitudes usually found for individual choices.","accessed":{"date-parts":[[2022,8,11]]},"author":[{"family":"Pahlke","given":"Julius"},{"family":"Strasser","given":"Sebastian"},{"family":"Vieider","given":"Ferdinand M."}],"citation-key":"pahlkeResponsibilityEffectsDecision2015","container-title":"Journal of Risk and Uncertainty","container-title-short":"J Risk Uncertain","DOI":"10.1007/s11166-015-9223-6","ISSN":"1573-0476","issue":"2","issued":{"date-parts":[[2015,10,1]]},"language":"en","page":"125-146","source":"Springer Link","title":"Responsibility effects in decision making under risk","type":"article-journal","URL":"https://doi.org/10.1007/s11166-015-9223-6","volume":"51"},
  {"id":"pahlkeRisktakingOthersAccountability2012","abstract":"We let subjects take risky decisions that affect themselves and a passive recipient. Adding a requirement to justify their choices significantly reduces loss aversion. This indicates that such an accountability mechanism may be effective at debiasing loss aversion in agency relations.","accessed":{"date-parts":[[2022,8,11]]},"author":[{"family":"Pahlke","given":"Julius"},{"family":"Strasser","given":"Sebastian"},{"family":"Vieider","given":"Ferdinand M."}],"citation-key":"pahlkeRisktakingOthersAccountability2012","container-title":"Economics Letters","container-title-short":"Economics Letters","DOI":"10.1016/j.econlet.2011.09.037","ISSN":"0165-1765","issue":"1","issued":{"date-parts":[[2012,1,1]]},"language":"en","page":"102-105","source":"ScienceDirect","title":"Risk-taking for others under accountability","type":"article-journal","URL":"https://www.sciencedirect.com/science/article/pii/S0165176511003661","volume":"114"},
  {"id":"palomboEthnographicUnderstandingSoftware2020","accessed":{"date-parts":[[2021,2,22]]},"author":[{"family":"Palombo","given":"Hernan"},{"family":"Tabari","given":"Armin Ziaie"},{"family":"Lende","given":"Daniel"},{"family":"Ligatti","given":"Jay"},{"family":"Ou","given":"Xinming"}],"citation-key":"palomboEthnographicUnderstandingSoftware2020","event-title":"Sixteenth Symposium on Usable Privacy and Security ({SOUPS} 2020)","ISBN":"978-1-939133-16-8","issued":{"date-parts":[[2020]]},"language":"en","page":"205-220","source":"www.usenix.org","title":"An Ethnographic Understanding of Software (In)Security and a Co-Creation Model to Improve Secure Software Development","type":"paper-conference","URL":"https://www.usenix.org/conference/soups2020/presentation/palombo"},
  {"id":"polmanDecisionMakingOthers2020","abstract":"Are choices for others riskier than choices people make for themselves? This question has been asked by economists, psychologists, and other researchers in the social sciences – which has generated a diversity of research accounts and results. For example, a number of studies have found strong instances of a risky shift in choices for others, while other studies have found no such effect or have found that choices for others instead generate a cautious shift. In a meta-analysis of 128 effects from 71 published and unpublished papers (totaling 14,443 observations), we found a significant though small effect size (d = 0.105) in favor of a risky shift when people choose for others. Moreover, we found considerable variance between studies (Q = 1106.25), suggesting that the net effect is susceptible to moderating factors or study characteristics, which we identify and discuss as well (viz. choice recipient, decision frame, decision reciprocity, theoretical perspective, study design). Thus, we document not only whether decisions for others are riskier, but when (and when such decisions are less risky). We further discuss what is distinctly unique about decision making for others – how such choices are not just different in degree from personal choices but different in kind.","accessed":{"date-parts":[[2022,8,16]]},"author":[{"family":"Polman","given":"Evan"},{"family":"Wu","given":"Kaiyang"}],"citation-key":"polmanDecisionMakingOthers2020","collection-title":"Decision Making for Others","container-title":"Journal of Economic Psychology","container-title-short":"Journal of Economic Psychology","DOI":"10.1016/j.joep.2019.06.007","ISSN":"0167-4870","issued":{"date-parts":[[2020,3,1]]},"language":"en","page":"102184","source":"ScienceDirect","title":"Decision making for others involving risk: A review and meta-analysis","title-short":"Decision making for others involving risk","type":"article-journal","URL":"https://www.sciencedirect.com/science/article/pii/S016748701930306X","volume":"77"},
  {"id":"ralphTheoryDebiasingSoftware2011","abstract":"Despite increasingly sophisticated programming languages, software developer training, testing tools, integrated development environments and project management techniques, software project failure, abandonment and overrun rates remain high. One way to address this is to focus on common systematic errors made by software project participants. In many cases, such errors are manifestations of cognitive biases. Consequently this paper proposes a theory of the role of cognitive biases in software development project success. The proposed theory posits that such errors are mutual properties of people and tasks; they may therefore be avoided by modifying the person-task system using specific sociotechnical interventions. The theory is illustrated using the case of planning poker, a task estimation technique designed to overcome anchoring bias.","author":[{"family":"Ralph","given":"Paul"}],"citation-key":"ralphTheoryDebiasingSoftware2011","collection-title":"Lecture Notes in Business Information Processing","container-title":"Research in Systems Analysis and Design: Models and Methods","DOI":"10.1007/978-3-642-25676-9_8","editor":[{"family":"Wrycza","given":"Stanisław"}],"event-place":"Berlin, Heidelberg","ISBN":"978-3-642-25676-9","issued":{"date-parts":[[2011]]},"language":"en","page":"92-105","publisher":"Springer","publisher-place":"Berlin, Heidelberg","source":"Springer Link","title":"Toward a Theory of Debiasing Software Development","type":"paper-conference"},
  {"id":"rampinTaguetteOpensourceQualitative2021","abstract":"Rampin et al., (2021). Taguette: open-source qualitative data analysis. Journal of Open Source Software, 6(68), 3522, https://doi.org/10.21105/joss.03522","accessed":{"date-parts":[[2022,8,16]]},"author":[{"family":"Rampin","given":"Rémi"},{"family":"Rampin","given":"Vicky"}],"citation-key":"rampinTaguetteOpensourceQualitative2021","container-title":"Journal of Open Source Software","DOI":"10.21105/joss.03522","ISSN":"2475-9066","issue":"68","issued":{"date-parts":[[2021,12,10]]},"language":"en","page":"3522","source":"joss.theoj.org","title":"Taguette: open-source qualitative data analysis","title-short":"Taguette","type":"article-journal","URL":"https://joss.theoj.org/papers/10.21105/joss.03522","volume":"6"},
  {"id":"raufCaseAdaptiveSecurity2021","abstract":"Despite the availability of various methods and tools to facilitate secure coding, developers continue to write code that contains common vulnerabilities. It is important to understand why technological advances do not sufficiently facilitate developers in writing secure code. To widen our understanding of developers' behaviour, we considered the complexity of the security decision space of developers using theory from cognitive and social psychology. Our interdisciplinary study reported in this article (1) draws on the psychology literature to provide conceptual underpinnings for three categories of impediments to achieving security goals, (2) reports on an in-depth meta-analysis of existing software security literature that identified a catalogue of factors that influence developers' security decisions, and (3) characterises the landscape of existing security interventions that are available to the developer during coding and identifies gaps. Collectively, these show that different forms of impediments to achieving security goals arise from different contributing factors. Interventions will be more effective where they reflect psychological factors more sensitively and marry technical sophistication, psychological frameworks, and usability. Our analysis suggests “adaptive security interventions” as a solution that responds to the changing security needs of individual developers and a present a proof-of-concept tool to substantiate our suggestion.","accessed":{"date-parts":[[2022,3,28]]},"author":[{"family":"Rauf","given":"Irum"},{"family":"Petre","given":"Marian"},{"family":"Tun","given":"Thein"},{"family":"Lopez","given":"Tamara"},{"family":"Lunn","given":"Paul"},{"family":"Van Der Linden","given":"Dirk"},{"family":"Towse","given":"John"},{"family":"Sharp","given":"Helen"},{"family":"Levine","given":"Mark"},{"family":"Rashid","given":"Awais"},{"family":"Nuseibeh","given":"Bashar"}],"citation-key":"raufCaseAdaptiveSecurity2021","container-title":"ACM Transactions on Software Engineering and Methodology","container-title-short":"ACM Trans. Softw. Eng. Methodol.","DOI":"10.1145/3471930","ISSN":"1049-331X","issue":"1","issued":{"date-parts":[[2021,9,28]]},"page":"9:1–9:52","source":"January 2022","title":"The Case for Adaptive Security Interventions","type":"article-journal","URL":"http://doi.org/10.1145/3471930","volume":"31"},
  {"id":"raufInfluencesDevelopersPerspectives2022","abstract":"Background: Recent studies show that secure coding is about not only technical requirements but also developers' behaviour. Objective: To understand the influence of socio-technical contexts on how developers attend to and engage with security in code, software engineering researchers collaborated with social psychologists on a psychologically-informed study. Method: In a preregistered, between-group, controlled experiment, 124 developers from multiple freelance communities, were primed toward one of three identities, following which they completed code review tasks with open-ended responses. Qualitative analysis of the rich data focused on the attitudes and reasoning that shaped their identification of security issues within code. Results: Overall, attention to code security was intermittent and heterogeneous in focus. Although social identity priming did not significantly change the code review, qualitative analysis revealed that developers varied in how they noticed issues in code, how they addressed them, and how they justified their choices. Conclusion: We found that many developers do think about security – but differently from one another. Hence, effective interventions to promote secure coding must be appropriate to the individual development context. Data is uploaded at: https://osf.io/3jvrk","author":[{"family":"Rauf","given":"Irum"},{"family":"Lopez","given":"Tamara"},{"family":"Sharp","given":"Helen"},{"family":"Petre","given":"Marian"},{"family":"Tun","given":"Thein"},{"family":"Levine","given":"Mark"},{"family":"Towse","given":"John"},{"family":"Linden","given":"Dirk","non-dropping-particle":"van der"},{"family":"Rashid","given":"Awais"},{"family":"Nuseibeh","given":"Bashar"}],"citation-key":"raufInfluencesDevelopersPerspectives2022","container-title":"2022 IEEE/ACM 15th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)","DOI":"10.1145/3528579.3529180","event-title":"2022 IEEE/ACM 15th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)","ISSN":"2574-1837","issued":{"date-parts":[[2022,5]]},"page":"86-95","source":"IEEE Xplore","title":"Influences of developers' perspectives on their engagement with security in code","type":"paper-conference"},
  {"id":"raufSecurityNotSecurity2020","author":[{"family":"Rauf","given":"Irum"},{"family":"Linden","given":"Dirk","non-dropping-particle":"van der"},{"family":"Levine","given":"Mark"},{"family":"Towse","given":"John"},{"family":"Nuseibeh","given":"Bashar"},{"family":"Rashid","given":"Awais"}],"citation-key":"raufSecurityNotSecurity2020","DOI":"10.1145/3387940.3392230","event-title":"Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops","issued":{"date-parts":[[2020]]},"page":"141-144","title":"Security but not for security's sake","type":"paper-conference"},
  {"id":"rheeUnrealisticOptimismInformation2012","abstract":"Information security is a critical issue that many firms face these days. While increasing incidents of information security breaches have generated extensive publicity, previous studies repeatedly expose low levels of managerial awareness and commitment, a key obstacle to achieving a good information security posture. The main motivation of our study emanates from this phenomenon that the increased vulnerability to information security breaches is coupled with the low level of managerial awareness and commitment regarding information security threats. We report this dissonance by addressing a cognitive bias called optimistic bias. Using a survey, we study if MIS executives are subject to such a bias in their vulnerability perceptions of information security. We find that they demonstrate optimistic bias in risk perception on information security domain. The extent of this optimistic bias is greater with a distant comparison target with fewer information sharing activities. This optimistic bias is also found to be related to perception of controllability with information security threats. In order to overcome the effects of optimistic bias, firms need more security awareness training and systematic treatments of security threats instead of relying on ad hoc approach to security measure implementation.","accessed":{"date-parts":[[2021,1,26]]},"author":[{"family":"Rhee","given":"Hyeun-Suk"},{"family":"Ryu","given":"Young U."},{"family":"Kim","given":"Cheong-Tag"}],"citation-key":"rheeUnrealisticOptimismInformation2012","container-title":"Computers & Security","container-title-short":"Computers & Security","DOI":"10.1016/j.cose.2011.12.001","ISSN":"0167-4048","issue":"2","issued":{"date-parts":[[2012,3,1]]},"language":"en","page":"221-232","source":"ScienceDirect","title":"Unrealistic optimism on information security management","type":"article-journal","URL":"http://www.sciencedirect.com/science/article/pii/S0167404811001441","volume":"31"},
  {"id":"ryanSelfDeterminationTheoryFacilitation2000","author":[{"family":"Ryan","given":"Richard M"},{"family":"Deci","given":"Edward L"}],"citation-key":"ryanSelfDeterminationTheoryFacilitation2000","container-title":"American Psychologist","issued":{"date-parts":[[2000]]},"language":"en","page":"67","source":"Zotero","title":"Self-Determination Theory and the Facilitation of Intrinsic Motivation, Social Development, and Well-Being","type":"article-journal"},
  {"id":"salmanControlledExperimentTime2019","abstract":"Confirmation bias is a person’s tendency to look for evidence that strengthens his/her prior beliefs rather than refutes them. Manifestation of confirmation bias in software testing may have adverse effects on software quality. Psychology research suggests that time pressure could trigger confirmation bias.","accessed":{"date-parts":[[2022,8,9]]},"author":[{"family":"Salman","given":"Iflaah"},{"family":"Turhan","given":"Burak"},{"family":"Vegas","given":"Sira"}],"citation-key":"salmanControlledExperimentTime2019","container-title":"Empirical Software Engineering","container-title-short":"Empir Software Eng","DOI":"10.1007/s10664-018-9668-8","ISSN":"1573-7616","issue":"4","issued":{"date-parts":[[2019,8,1]]},"language":"en","page":"1727-1761","source":"Springer Link","title":"A controlled experiment on time pressure and confirmation bias in functional software testing","type":"article-journal","URL":"https://doi.org/10.1007/s10664-018-9668-8","volume":"24"},
  {"id":"tahaeiDonKnowToo2020","abstract":"The security attitudes and approaches of software developers have a large impact on the software they produce, yet we know very little about how and when these views are constructed. This paper investigates the security and privacy (S&P) perceptions, experiences, and practices of current Computer Science students at the graduate and undergraduate level using semi-structured interviews. We ﬁnd that the attitudes of students already match many of those that have been observed in professional level developers. Students have a range of hacker and attack mindsets, lack of experience with security APIs, a mixed view of who is in charge of S&P in the software life cycle, and a tendency to trust other peoples’ code as a convenient approach to rapidly build software. We discuss the impact of our results on both curriculum development and support for professional developers.","author":[{"family":"Tahaei","given":"Mohammad"},{"family":"Jenkins","given":"Adam"},{"family":"Vaniea","given":"Kami"},{"family":"Wolters","given":"Maria"}],"citation-key":"tahaeiDonKnowToo2020","issued":{"date-parts":[[2020]]},"language":"en","page":"20","source":"Zotero","title":"“I Don’t Know Too Much About It”: On the Security Mindsets of Computer Science Students","type":"article-journal"},
  {"id":"tahaeiSurveyDeveloperCentredSecurity2019","abstract":"Software developers are key players in the security ecosystem as they produce code that runs on millions of devices. Yet we continue to see insecure code being developed and deployed on a regular basis despite the existence of support infrastructures, tools, and research into common errors. This work provides a systematised overview of the relatively new ﬁeld of Developer-Centred Security which aims to understand the context in which developers produce security-relevant code as well as provide tools and processes that that better support both developers and secure code production. We report here on a systematic literature review of 49 publications on security studies with software developer participants. We provide an overview of both the types of methodologies currently being used as well as the current research in the area. Finally, we also provide recommendations for future work in Developer-Centred Security.","accessed":{"date-parts":[[2021,2,11]]},"author":[{"family":"Tahaei","given":"Mohammad"},{"family":"Vaniea","given":"Kami"}],"citation-key":"tahaeiSurveyDeveloperCentredSecurity2019","container-title":"2019 IEEE European Symposium on Security and Privacy Workshops (EuroS&PW)","DOI":"10.1109/EuroSPW.2019.00021","event-place":"Stockholm, Sweden","event-title":"2019 IEEE European Symposium on Security and Privacy Workshops (EuroS&PW)","ISBN":"978-1-72813-026-2","issued":{"date-parts":[[2019,6]]},"language":"en","page":"129-138","publisher":"IEEE","publisher-place":"Stockholm, Sweden","source":"DOI.org (Crossref)","title":"A Survey on Developer-Centred Security","type":"paper-conference","URL":"https://ieeexplore.ieee.org/document/8802434/"},
  {"id":"tajfelIntegrativeTheoryIntergroup1979","author":[{"family":"Tajfel","given":"Henri"},{"family":"Turner","given":"John C."}],"citation-key":"tajfelIntegrativeTheoryIntergroup1979","container-title":"Organizational Identity: A reader","issued":{"date-parts":[[1979]]},"page":"56-65","title":"An integrative theory of intergroup conflict","type":"article-journal"},
  {"id":"tanisSocialIdentityApproach2005","abstract":"Trusting behaviour involves relinquishing control over outcomes valuable to the self. Previous research suggests that interpersonal perceptions of trustworthiness are closely related to this behaviour. The present research suggests that the more proximal determinant of trusting behaviour is the expectation that the other will reciprocate. Based on the Social Identity model of Deindividuation Effects (SIDE) model, reciprocity expectations may be created by interpersonal perceptions of trustworthiness or a shared group membership. To investigate this, group membership and individual identifiability were experimentally manipulated (N = 139): When individuals were not identifiable, trusting behaviour was based on expectations of reciprocity inferred from group membership, not on perceived trustworthiness. In contrast, personal identifiability fostered perceptions of trustworthiness for both in- and out-group members. In this case interpersonal trustworthiness enhanced expectations of reciprocity, which in turn increased trusting behaviour. Copyright © 2005 John Wiley & Sons, Ltd.","accessed":{"date-parts":[[2022,8,22]]},"author":[{"family":"Tanis","given":"Martin"},{"family":"Postmes","given":"Tom"}],"citation-key":"tanisSocialIdentityApproach2005","container-title":"European Journal of Social Psychology","DOI":"10.1002/ejsp.256","ISSN":"1099-0992","issue":"3","issued":{"date-parts":[[2005]]},"language":"en","note":"_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/ejsp.256","page":"413-424","source":"Wiley Online Library","title":"A social identity approach to trust: interpersonal perception, group membership and trusting behaviour","title-short":"A social identity approach to trust","type":"article-journal","URL":"https://onlinelibrary.wiley.com/doi/abs/10.1002/ejsp.256","volume":"35"},
  {"id":"teasleyWhySoftwareTesting1994","abstract":"The term positive test strategy describes the tendency to test a hypothesis with test cases that confirm (i.e., aim to support) rather than disconfirm the hypothesis. Most demonstrations of this phenomenon have involved relatively abstract problems. The authors suggest that people use a positive test strategy in a more applied setting as well, that is, in computer software testing. In 2 experiments, they examined how Ss with varying expertise performed functional testing of software. There was substantial evidence of the use of a positive test strategy: Ss tended to test only those functions and aspects of the software that were specifically described in the specifications as what the software was supposed to do. This effect was only partially mitigated by increasing expertise among testers and by more complete program specifications. (PsycINFO Database Record (c) 2016 APA, all rights reserved)","author":[{"family":"Teasley","given":"Barbee E."},{"family":"Leventhal","given":"Laura Marie"},{"family":"Mynatt","given":"Clifford R."},{"family":"Rohlman","given":"Diane S."}],"citation-key":"teasleyWhySoftwareTesting1994","container-title":"Journal of Applied Psychology","DOI":"10.1037/0021-9010.79.1.142","event-place":"US","ISSN":"1939-1854","issue":"1","issued":{"date-parts":[[1994]]},"page":"142-155","publisher":"American Psychological Association","publisher-place":"US","source":"APA PsycNet","title":"Why software testing is sometimes ineffective: Two applied studies of positive test strategy","title-short":"Why software testing is sometimes ineffective","type":"article-journal","volume":"79"},
  {"id":"tomExplorationTechnicalDebt2013","abstract":"Context\nWhilst technical debt is considered to be detrimental to the long term success of software development, it appears to be poorly understood in academic literature. The absence of a clear definition and model for technical debt exacerbates the challenge of its identification and adequate management, thus preventing the realisation of technical debt's utility as a conceptual and technical communication device.\nObjective\nTo make a critical examination of technical debt and consolidate understanding of the nature of technical debt and its implications for software development.\nMethod\nAn exploratory case study technique that involves multivocal literature review, supplemented by interviews with software practitioners and academics to establish the boundaries of the technical debt phenomenon.\nResult\nA key outcome of this research is the creation of a theoretical framework that provides a holistic view of technical debt comprising a set of technical debts dimensions, attributes, precedents and outcomes, as well as the phenomenon itself and a taxonomy that describes and encompasses different forms of the technical debt phenomenon.\nConclusion\nThe proposed framework provides a useful approach to understanding the overall phenomenon of technical debt for practical purposes. Future research should incorporate empirical studies to validate heuristics and techniques that will assist practitioners in their management of technical debt.","accessed":{"date-parts":[[2022,8,22]]},"author":[{"family":"Tom","given":"Edith"},{"family":"Aurum","given":"Aybüke"},{"family":"Vidgen","given":"Richard"}],"citation-key":"tomExplorationTechnicalDebt2013","container-title":"Journal of Systems and Software","container-title-short":"Journal of Systems and Software","DOI":"10.1016/j.jss.2012.12.052","ISSN":"0164-1212","issue":"6","issued":{"date-parts":[[2013,6,1]]},"language":"en","page":"1498-1516","source":"ScienceDirect","title":"An exploration of technical debt","type":"article-journal","URL":"https://www.sciencedirect.com/science/article/pii/S0164121213000022","volume":"86"},
  {"id":"tverskyJudgmentUncertaintyHeuristics1974","author":[{"family":"Tversky","given":"Amos"},{"family":"Kahneman","given":"Daniel"}],"citation-key":"tverskyJudgmentUncertaintyHeuristics1974","container-title":"science","ISSN":"0036-8075","issue":"4157","issued":{"date-parts":[[1974]]},"page":"1124-1131","title":"Judgment under uncertainty: Heuristics and biases","type":"article-journal","volume":"185"},
  {"id":"wasonFailureEliminateHypotheses1960","abstract":"This investigation examines the extent to which intelligent young adults seek (i) confirming evidence alone (enumerative induction) or (ii) confirming and discontinuing evidence (eliminative induction), in order to draw conclusions in a simple conceptual task. The experiment is designed so that use of confirming evidence alone will almost certainly lead to erroneous conclusions because (i) the correct concept is entailed by many more obvious ones, and (ii) the universe of possible instances (numbers) is infinite., Six out of 29 subjects reached the correct conclusion without previous incorrect ones, 13 reached one incorrect conclusion, nine reached two or more incorrect conclusions, and one reached no conclusion. The results showed that those subjects, who reached two or more incorrect conclusions, were unable, or unwilling to test their hypotheses. The implications are discussed in relation to scientific thinking.","accessed":{"date-parts":[[2022,8,9]]},"author":[{"family":"Wason","given":"P. C."}],"citation-key":"wasonFailureEliminateHypotheses1960","container-title":"Quarterly Journal of Experimental Psychology","container-title-short":"Quarterly Journal of Experimental Psychology","DOI":"10.1080/17470216008416717","ISSN":"0033-555X","issue":"3","issued":{"date-parts":[[1960,7,1]]},"language":"en","page":"129-140","publisher":"SAGE Publications","source":"SAGE Journals","title":"On the Failure to Eliminate Hypotheses in a Conceptual Task","type":"article-journal","URL":"https://doi.org/10.1080/17470216008416717","volume":"12"},
  {"id":"weinsteinUnrealisticOptimismFuture1980","abstract":"Two studies investigated the tendency of people to be unrealistically optimistic about future life events. In Study 1, 258 college students estimated how much their own chances of experiencing 42 events differed from the chances of their classmates. Overall, they rated their own chances to be above average for positive events and below average for negative events, ps<.001. Cognitive and motivational considerations led to predictions that degree of desirability, perceived probability, personal experience, perceived controllability, and stereotype salience would influence the amount of optimistic bias evoked by different events. All predictions were supported, although the pattern of effects differed for positive and negative events. Study 2 tested the idea that people are unrealistically optimistic because they focus on factors that improve their own chances of achieving desirable outcomes and fail to realize that others may have just as many factors in their favor. Students listed the factors that they thought influenced their own chances of experiencing eight future events. When such lists were read by a second group of students, the amount of unrealistic optimism shown by this second group for the same eight events decreased significantly, although it was not eliminated. According to popular belief, people tend to think they are invulnerable. They expect others to be victims of misfortune, not themselves. Such ideas imply not merely a hopeful outlook on life, but an error in judgment that can be labeled unrealistic optimism. It is usually impossible to demonstrate that an individual's optimistic expectations about the future are unrealistic. An individual might be quite correct in asserting that his or her chances of experiencing a negative event are less than average. On a group basis, however, it is relatively easy to test for an optimistic bias. If all people claim their changes of experiencing a negative event are less than","author":[{"family":"Weinstein","given":"Neil D."}],"citation-key":"weinsteinUnrealisticOptimismFuture1980","container-title":"Journal of Personality and Social Psychology,","issued":{"date-parts":[[1980]]},"page":"806–820","source":"CiteSeer","title":"Unrealistic optimism about future life events.","type":"article-journal"},
  {"id":"witscheyTechnicalPersonalFactors2014","abstract":"Security tools analyze programs to help software developers write more secure code. Although these tools have been demonstrated to find vulnerabilities that human developers may not, many developers do not use them, leaving software needlessly vulnerable. To help understand why, we describe a theoretical account of factors that influence developers' adoption decisions. This model was developed based on interviews with 42 professional developers, and is a first step toward a comprehensive theory of security tool adoption based on diffusion of innovations theory.","accessed":{"date-parts":[[2021,2,11]]},"author":[{"family":"Witschey","given":"Jim"},{"family":"Xiao","given":"Shundan"},{"family":"Murphy-Hill","given":"Emerson"}],"citation-key":"witscheyTechnicalPersonalFactors2014","collection-title":"SIW '14","container-title":"Proceedings of the 2014 ACM Workshop on Security Information Workers","DOI":"10.1145/2663887.2663898","event-place":"New York, NY, USA","ISBN":"978-1-4503-3152-4","issued":{"date-parts":[[2014,11,7]]},"page":"23–26","publisher":"Association for Computing Machinery","publisher-place":"New York, NY, USA","source":"ACM Digital Library","title":"Technical and Personal Factors Influencing Developers' Adoption of Security Tools","type":"paper-conference","URL":"https://doi.org/10.1145/2663887.2663898"},
  {"id":"xiaoSocialInfluencesSecure2014","author":[{"family":"Xiao","given":"Shundan"},{"family":"Witschey","given":"Jim"},{"family":"Murphy-Hill","given":"Emerson"}],"citation-key":"xiaoSocialInfluencesSecure2014","container-title":"Proceedings of the 17th ACM conference on Computer supported cooperative work & social computing","issued":{"date-parts":[[2014]]},"page":"1095-1106","title":"Social Influences on Secure Development Tool Adoption: Why Security Tools Spread","type":"article-journal"},
  {"id":"xieWhyProgrammersMake2011","abstract":"A large number of software security vulnerabilities are caused by software errors that are committed by software developers. We believe that interactive tool support will play an important role in aiding software developers to develop more secure software. However, an in-depth understanding of how and why software developers produce security bugs is needed to design such tools. We conducted a semi-structured interview study on 15 professional software developers to understand their perceptions and behaviors related to software security. Our results reveal a disconnect between developers' conceptual understanding of security and their attitudes regarding their personal responsibility and practices for software security.","author":[{"family":"Xie","given":"J."},{"family":"Lipford","given":"H. R."},{"family":"Chu","given":"B."}],"citation-key":"xieWhyProgrammersMake2011","container-title":"2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)","DOI":"10.1109/VLHCC.2011.6070393","event-title":"2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)","ISSN":"1943-6106","issued":{"date-parts":[[2011,9]]},"page":"161-164","source":"IEEE Xplore","title":"Why do programmers make security errors?","type":"paper-conference"}
]
